=== About ===

Glui2, OpenGL User Interface Library, is a light-weight feature-rich stand-alone Graphical User Interface (GUI) for OpenGL and GLUT applications. Written in C++, it is clean, easy to maintain, well documented, and supports Linux, Windows, and OSX. (Only 9k lines of code!)

Glui2, based on the original GLUI library by Paul Rademacher, is a full re-write based on a minimalistic design. This project uses similar methods and programing interface, but now includes GUI theming, easier integration, better performance, easier extensions, full documentation, and a clean implementation in portable C++. Checkout what the project looks like through our screenshots page!

Why use Glui2 versus all the other hundreds of GUI libraries? One big advantage is that it has a very small code base (9KLOC) and interfacing footprint. Unlike wxWidgest or all the other libraries, this code is ready to go and easy to use. Nothing complex, no annoying overhead, or bulky boilerplate, etc. It truely is ready to go out of the box and extensible!

This library is designed to be used for scientific applications, academic usage, interactive media applications, etc.

=== General Design ===

The general design, much like the original GLUI library, was to use a factory-methods approach so that GUI objects were internally managed by the library and quick to create for end-developers. All rendering is done based on an n-degree tree, so that any controller could have any number of child controllers. All controllers (With the exception fo g2Dialog) extends from [g2Controller] which acts as a virtual root class that manages events, inputs, outputs, and theming.

=== GUI Controllers ===

Currently the project implements the following GUI controllers (12 in all), but allows for end-developers to quickly make extensions (all controllers, except [g2Dialog] extend from [g2Controller]):

  * Labels (bitmap font) as [g2Label]
  * Buttons as [g2Button]
  * Text Fields as [g2TextField]
  * Radio Button / Group as [g2RadioGroup]
  * CheckBox as [g2CheckBox]
  * Console as [g2Console]
  * Spinner as [g2Spinner]
  * Dropdown Selection as [g2Dropdown]
  * Progress Bar as [g2ProgressBar]
  * Sliders (Horizontal / vertical) as [g2Slider]
  * Panels as [g2Panel]
  * Cross platform open/save dialogs as [g2Dialog]

=== Programming Interface ===

This library takes a "[http://en.wikipedia.org/wiki/Factory_method_pattern Factory Method]" approach to GUI controller instantiation. This is done to internally manage the rendering scene and to simplify object ownership. This also minimizes [http://en.wikipedia.org/wiki/Boilerplate_(text)#Boilerplate_code boilerplate code] associated with scene creation. All GUI controllers are programmatically generated and controlled; it is possible, but not an implemented feature, to open / save / close a user interface language (similar concept to [http://en.wikipedia.org/wiki/XUL XUL]).

Attaching Glui2 with a new OpenGL application or existing codebase is easy! Simply instantiate a Glui2 controller object and bind any overloaded callbacks you want with GLUT's own interface. To create UI Controllers (GUI elements), use the factory methods (such as "Glui2::addLabel(...)") at any point in your code. To make sure everything is drawn in the right order, call the "Glui2::Render()" function right at the end of your own rendering cycle. That's it! It's as simple as:

  # *Instantiate* a [glui2] object and rebind with your (new or old) GLUT functions
  # Using the [glui2] *factory methods*, create all your GUI controllers
  # Make sure to explicitly call the ... WIP